class Solution { 
         public:
    string longestPalindrome(string s) {
        int n = s.size();
        if (n < 2) return s;
        int start = 0, maxLen = 1;
        for (int i = 0; i < n;) {
            if (n - i <= maxLen / 2) break;
            int j = i, k = i;
            while (k < n - 1 && s[k + 1] == s[k]) ++k; // Skip duplicate characters.
            i = k + 1;
            while (k < n - 1 && j > 0 && s[k + 1] == s[j - 1]) { // Expand.
                ++k;
                --j;
            }
            int newLen = k - j + 1;
            if (newLen > maxLen) {
                start = j;
                maxLen = newLen;
            }
        }
        return s.substr(start, maxLen);
    }
};
