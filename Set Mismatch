class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
    std::unordered_map<int, int> mp;
        std::vector<int> v;
        int count = 0, y = 0;

        for (int ele : nums) {
            mp[ele]++;
        }

        for (auto x : mp) {
            if (x.second > 1) {
                count = x.first;
                y = x.first + 1;
                break;  // Break out of the loop after finding the duplicate
            }
        }

        // Iterate through nums again to find the missing number
        for (int i = 1; i <= nums.size(); ++i) {
            if (mp.find(i) == mp.end()) {
                y = i;
                break;  // Break out of the loop after finding the missing number
            }
        }

        v.push_back(count);
        v.push_back(y);
        return v;
    }
};
